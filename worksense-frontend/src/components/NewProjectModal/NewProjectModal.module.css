/* YourModalComponent.module.css */
.modalContent {
    display: flex;
    flex-direction: column;
    gap: 24px;
    background: var(--neutral-100);
    border-radius: var(, 8px);
    padding: 80px;
    width: 100%;
    height: 100%;
    box-shadow: var(--shadow-lg);

}

/* Add or adjust styles for the new layout container */
.modalBodyLayout {
    display: flex;
}

.modalHeader {
    flex: 1; /* Allows the header section to grow */
    max-width: 400px; /* Optional: Set a maximum width for the header text */
    /* Ensure margin-bottom is added if flex-wrap is used, for spacing when stacked */
    margin-bottom: 1.5rem; /* Example for when stacked vertically */

}

.modalActions {
    display: flex;
    justify-content: flex-end;
    gap: 30px;
}
.modalActions Button {
    flex: 1;
    transition: background-color 0.2s;
}

/* Add styles for the new div wrapping the Form component - it becomes the right column */
.modalFormArea {
    flex: 2;
    height: 600px;
}

/* Responsive adjustment: stack columns on smaller screens */
@media (max-width: 768px) { /* Adjust breakpoint as needed */
    .modalBodyLayout {
        flex-direction: column; /* Stack header above form */
        gap: 1.5rem; /* Adjust gap for vertical stacking */
    }

    .modalHeader,
    .modalFormArea {
        flex: none; /* Remove flex grow */
        width: 100%; /* Take full width */
        max-width: none; /* Remove max-width limit */
    }

    .modalHeader {
        margin-bottom: 0; /* Remove extra bottom margin when stacked */
    }
}

/* Keep your existing styles for modalOverlay, modalContent, modalActions, formGroup, etc. */
/* Styles for the form elements themselves (InputWithClear, textarea, checkboxes) should
   either be defined within the Form component's styles or accessible here. */

.modalOverlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
}




.modalHeader h2 {
    font-size: 30px;
    font-weight: 600;
    margin: 0 0 20px;
    color: var(--text-primary);
}

.modalDescription {
    font-size: 16px;
    color: var(--neutral-600);
    margin: 0;
    line-height: 1.5;
    overflow-y: auto;
}

.formGroup {
    margin-bottom: 20px;
    margin-top: 15px;
    display: flex;
    flex-direction: column;
    gap: 12px;
    width: 100%;
}

.formGroup label {
    display: block;
    font-size: 16px;
    font-weight: 500;
    color: var(--text-primary);
    margin-bottom: 8px;
}

.inputWrapper,
.textareaWrapper {
    position: relative;
    width: 100%;
    overflow-y: auto;
    border: 1px solid var(--neutral-300);
    border-radius: var(--radius, 8px);
}

.inputWrapper input,
.textareaWrapper textarea {
    width: 100%;
    padding: 12px;
    border-radius: var(--radius, 8px);
    font-size: 16px;
    color: var(--text-primary);
    background-color: var(--neutral-100);
    overflow-y: auto;
}

.textareaWrapper textarea {
    min-height: 80px;
    resize: none;
    line-height: 1.5;
    overflow-y: auto;
    border: var(--neutral-300);
}

.inputWrapper input:focus,
.textareaWrapper textarea:focus {
    outline: none;
    border-color: var(--neutral-300);
}

/* Simple error message */
.errorMessage {
    color: var(--error);
    font-size: 14px;
    margin-top: 6px;
}





.startButton:disabled {
    background-color: var(--neutral-300);
    cursor: not-allowed;
    opacity: 0.7;
}

.memberControls {
    display: flex;
    gap: 12px;
    margin-bottom: 12px;
    border: 1px var(--neutral-800);
}

.memberSelect,
.roleSelect {
    flex: 1;
    padding: 8px 12px;
    border-radius: 6px;
    border: 1px solid var(--neutral-300);
    background-color: var(--neutral-200);
    color: var(--text-primary);
    font-size: 14px;
    cursor: pointer;
    transition: border-color 0.2s;
}

.memberSelect:hover,
.roleSelect:hover {
    border-color: var(--accent-pink);
}

.memberSelect:focus,
.roleSelect:focus {
    outline: none;
    border-color: var(--accent-pink);
    box-shadow: 0 0 0 2px rgba(172, 23, 84, 0.1);
}

.addButton {
    width: 36px;
    height: 36px;
    padding: 0;
    border-radius: 6px;
    border: none;
    background-color: var(--accent-pink);
    color: var(--accent-pink-text);
    font-size: 20px;
    cursor: pointer;
    transition: background-color 0.2s;
    display: flex;
    align-items: center;
    justify-content: center;
}

.addButton:hover:not(:disabled) {
    background-color: var(--accent-pink-hover);
}

.addButton:disabled {
    background-color: var(--neutral-300);
    cursor: not-allowed;
    opacity: 0.7;
}

.membersContainer {
    max-height: 100px;
    overflow-y: auto;
    border-radius: var(--radius, 8px);
    padding: 8px;
    border: 2px solid var(--neutral-300);
    background-color: var(--neutral-100);
}

.memberRow {
    display: flex;
    align-items: center;
    gap: 12px;
    padding: 12px;
    border-bottom: 2px solid var(--neutral-200);
    background-color: var(--neutral-100);
}

.memberRow:last-child {
    border-bottom: none;
}

.username {
    flex: 1;
    color: var(--text-primary);
    font-size: 15px;
    font-weight: 500;
    transition: color 0.2s;
}

.memberRole {
    padding: 4px 8px;
    border-radius: 4px;
    color: var(--neutral-600);
    font-size: 12px;
}

.removeMember {
    padding: 4px 8px;
    border-radius: 4px;
    border: 1px solid var(--border);
    background-color: transparent;
    color: var(--error);
    font-size: 12px;
    cursor: pointer;
    transition: all 0.2s;
}

.removeMember:hover {
    background-color: var(--error);
    color: var(--neutral-100);
    border-color: var(--error);
}

.noMembers {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100px;
    color: var(--neutral-600);
    font-size: 14px;
    font-style: italic;
}

/* BACKLOG POPULATION STYLES */
.populatingContainer {
    padding: 2rem;
    text-align: center;
}

.populatingContainer h2 {
    margin-bottom: 1.5rem;
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--text-primary);
}

.loaderContainer {
    margin-top: 2rem;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.progressBarContainer {
    width: 100%;
    height: 10px;
    background-color: var(--surface-light);
    border-radius: 5px;
    overflow: hidden;
    margin-bottom: 1rem;
}

.projectImage  {
    width: 85%;
    height: auto;
    object-fit: cover;
    margin-top: 50px;
}

.progressBar {
    height: 100%;
    background: linear-gradient(
            90deg,
            var(--accent-pink) 0%,
            var(--accent-pink-hover) 100%
    );
    border-radius: 5px;
    transition: width 0.5s ease-in-out;
}

.statusText {
    margin-bottom: 1.5rem;
    font-size: 1rem;
    color: var(--neutral-600);
}

.spinnerContainer {
    margin-top: 2rem;
}

.spinner {
    width: 40px;
    height: 40px;
    border: 4px solid var(--surface-light);
    border-left-color: var(--accent-pink);
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

.checkboxLabel {
    display: flex;
    align-items: center;
    font-weight: 500;
    cursor: pointer;
    transition: color 0.2s ease;
    color: var(--text-primary);
}

.checkboxLabel:hover {
    color: var(--accent-pink);
}

.aiLabel {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(
            135deg,
            var(--accent-pink) 0%,
            var(--accent-pink-hover) 100%
    );
    color: var(--accent-pink-text);
    font-size: 0.75rem;
    font-weight: bold;
    padding: 0.25rem 0.5rem;
    border-radius: 1rem;
    margin-left: 0.75rem;
    box-shadow: 0 2px 4px rgba(172, 23, 84, 0.2);
    transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.aiLabel:hover {
    transform: translateY(-1px);
    box-shadow: 0 3px 6px rgba(172, 23, 84, 0.3);
}

.aiDescription {
    font-size: 0.875rem;
    color: var(--neutral-600);
    padding: 0.50rem;
    background-color: var(--neutral-200);
    border-radius: 0.5rem;
    border-left: 3px solid var(--accent-pink);
    transition: all 0.3s ease;
}

.checkboxWrapper {
    display: flex;
    align-items: center;
    position: relative;
    padding: 0.5rem 0;
}

.checkboxWrapper input[type="checkbox"] {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

.checkboxWrapper input[type="checkbox"] + label {
    position: relative;
    padding-left: 2rem;
    cursor: pointer;
    display: inline-block;
    line-height: 1.5;
    color: var(--text-primary);
}

.checkboxWrapper input[type="checkbox"] + label:before {
    content: "";
    position: absolute;
    left: 0;
    top: 0.25rem;
    width: 1.25rem;
    height: 1.25rem;
    border: 2px solid var(--neutral-300);
    border-radius: 0.25rem;
    background-color: var(--neutral-100);
    transition: all 0.2s ease;
}

.checkboxWrapper input[type="checkbox"]:checked + label:before {
    background-color: var(--accent-pink);
    border-color: var(--accent-pink);
}

.checkboxWrapper input[type="checkbox"]:checked + label:after {
    content: "";
    position: absolute;
    left: 0.4rem;
    top: 0.5rem;
    width: 0.5rem;
    height: 0.75rem;
    border: solid var(--accent-pink-text);
    border-width: 0 2px 2px 0;
    transform: rotate(45deg);
    animation: checkmark 0.3s ease-in-out;
}

@keyframes checkmark {
    0% {
        opacity: 0;
        transform: rotate(45deg) scale(0.5);
    }
    100% {
        opacity: 1;
        transform: rotate(45deg) scale(1);
    }
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

/* Simple responsive adjustment */
@media (max-width: 640px) {
    .modalContent {
        margin: 16px;
        padding: 24px;
    }
}
